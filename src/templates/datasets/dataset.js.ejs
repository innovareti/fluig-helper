function defineStructure() {

}
function onSync(lastSyncDate) {

}
function createDataset(fields, constraints, sortFields) {
    var dataset = DatasetBuilder.newDataset();  
	
	try{   
        <% for (colunm in props.colunms) { %>
        var <%= props.colunms[colunm] %>Constraint = null<% } %>
        if (constraints != null) {
            for (var i = 0; i < constraints.length; i++) {
                <% for (colunm in props.colunms) { %>
                if (constraints[i].fieldName == "<%= props.colunmsDatasetBase[colunm] %>") {
                    <%= props.colunms[colunm] %>Constraint = constraints[i].initialValue
                }<% } %> 

            }
        }
	    
        var constraintsDataset = new Array();<% for (colunm in props.colunms) { %>
        if (<%= props.colunms[colunm] %>Constraint != undefined && <%= props.colunms[colunm] %>Constraint != "" && <%= props.colunms[colunm] %>Constraint != null) {
            constraintsDataset.push(DatasetFactory.createConstraint('<%= props.colunmsDatasetBase[colunm] %>', <%= props.colunms[colunm] %>Constraint, <%= props.colunms[colunm] %>Constraint, ConstraintType.MUST));
        }<% } %>

        var dsSolicitacao = DatasetFactory.getDataset('<%= props.dataset %>', null, constraintsDataset, null);

        log.info("LINHAS: " + dsSolicitacao.rowsCount)
        if (dsSolicitacao.rowsCount > 0) {
            <% for (colunm in props.colunms) { %>
            dataset.addColumn('<%= props.colunms[colunm] %>');<% } %>
            
            for (var j = 0; j < dsSolicitacao.rowsCount; j++) {
                dataset.addRow([
                    <% for (colunm in props.colunmsDatasetBase) { %>
                    dsSolicitacao.getValue(j, '<%= props.colunmsDatasetBase[colunm] %>'),<% } %>
                    
                ]);
            }
        }

        return dataset;

    } catch (error) {

        dataset.addColumn('mensagem');
        dataset.addRow(['erro:' + error.message + ' at line ' + error.line]);

    }

} function onMobileSync(user) {

}